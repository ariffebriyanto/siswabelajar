@model OneStopRecruitment.Areas.StageArea.ViewModels.Staff.StageFormViewModel;
@using Model.DBConstraint
@{
    string Action = "";
    if (Model.StageForm.IDStage == 0)
    {
        Action = "InsertStage";
        ViewData["Title"] = "Insert Stage";
    }
    else
    {
        Action = "UpdateStage";
        ViewData["Title"] = "Update Stage";
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@await Component.InvokeAsync("Breadcrumb")
<section class="section-divider">
    <div>
        <form class="M--form type--1" asp-area="StageArea" asp-controller="Staff" asp-action="@Action"
              onsubmit="showAlert('@BaseConstraint.NotificationType.Loading', '@AlertConstraint.Default.Loading')"
              method="POST" autocomplete="off">
            <input type="hidden" asp-for="StageForm.IDStage" />
            <div class="form__field">
                <label class="field__label">Stage Name<span class="mandatory">*</span></label>
                <input id="txtStageName" type="text" class="C--textbox type--1" asp-for="StageForm.StageName" placeholder="Stage Name">
                <span asp-validation-for="StageForm.StageName" class="text-error"></span>
            </div>
            <div class="form__field">
                <label class="field__label">Stage Level<span class="mandatory">*</span></label>
                <input id="nbrStageLevel" type="number" min="0" max="@Int32.MaxValue" class="C--textbox type--1" asp-for="StageForm.StageLevel" placeholder="Stage Level">
                <span asp-validation-for="StageForm.StageLevel" class="text-error"></span>
            </div>
            <div class="form__action">
                <button type="submit" class="C--button type--1 -theme-primary">Submit</button>
            </div>
        </form>
    </div>
</section>